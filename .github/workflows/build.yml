# 📁 .github/workflows/build.yml
# 通用构建流程，供 beta.yml / release.yml 调用

name: Shared Build

on:
  workflow_call:
    inputs:
      version_type:
        required: true
        type: string  # beta or release
      tag_version:
        required: false
        type: string  # release 时传递 tag 版本
    outputs:
      version:
        description: "构建生成的版本号"
        value: ${{ jobs.version.outputs.version }}

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setver.outputs.version }}

    steps:
      - uses: actions/checkout@v4

      - name: 设置版本号
        id: setver
        run: |
          if [[ "${{ inputs.version_type }}" == "beta" ]]; then
            VERSION=$(yq e .version pubspec.yaml | cut -d '+' -f 1)
            COUNT=$(git rev-list --first-parent --count HEAD)
            echo "version=${VERSION}-beta.${COUNT}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ inputs.tag_version }}" >> $GITHUB_OUTPUT

  android:
    needs: version
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: 设置 JDK
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Cache Flutter SDK
        uses: actions/cache@v4
        id: cache-flutter
        with:
          path: /root/flutter-sdk
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}

      - name: 安装 Flutter
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.0

      - name: 下载依赖
        run: flutter pub get

      - name: 写入 keystore
        run: echo "$KEYSTORE_BASE64" | base64 -di > android/app/vvex.jks
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}

      - name: 更新版本号
        run: sed -i "s/version: .*/version: ${{ needs.version.outputs.version }}+/g" pubspec.yaml

      - name: 构建 APK
        run: flutter build apk --release --split-per-abi
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: 重命名 APK
        run: |
          for file in build/app/outputs/flutter-apk/app-*.apk; do
            if [[ $file =~ app-(.*)release.apk ]]; then
              mv "$file" "build/app/outputs/flutter-apk/Pili-${BASH_REMATCH[1]}v${{ needs.version.outputs.version }}.apk"
            fi
          done

      - name: 上传 APK
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: build/app/outputs/flutter-apk/Pili-*.apk

  ios:
    needs: version
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: 安装 Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.22.0
          cache: true

      - name: 更新版本号
        run: sed -i '' "s/version: .*/version: ${{ needs.version.outputs.version }}+/g" pubspec.yaml

      - name: 构建 IPA
        run: |
          flutter build ios --release --no-codesign
          mkdir -p Payload && cp -r build/ios/iphoneos/*.app Payload/
          zip -r app.ipa Payload

      - name: 重命名 IPA
        run: mv app.ipa build/Pili-v${{ needs.version.outputs.version }}.ipa

      - name: 上传 IPA
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/Pili-*.ipa

---

# 📁 .github/workflows/beta.yml
name: Pilipala Beta

on:
  push:
    branches:
      - x-main
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'
  workflow_dispatch:

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      version_type: beta

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: android-apks
          path: ./release

      - uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: ./release

      - name: 发布到 Telegram
        uses: xireiki/channel-post@v1.0.7
        with:
          bot_token: ${{ secrets.BOT_TOKEN }}
          chat_id: ${{ secrets.CHAT_ID }}
          large_file: true
          api_id: ${{ secrets.TELEGRAM_API_ID }}
          api_hash: ${{ secrets.TELEGRAM_API_HASH }}
          method: sendFile
          path: release/*
          parse_mode: Markdown
          context: |
            *Beta版本: v${{ needs.build.outputs.version }}*
            更新内容: 自动构建发布

---

# 📁 .github/workflows/release.yml
name: Pilipala Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    uses: ./.github/workflows/build.yml
    with:
      version_type: release
      tag_version: ${{ github.ref_name }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: android-apks
          path: ./release

      - uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: ./release

      - name: 发布 GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Pili v${{ needs.build.outputs.version }}
          tag_name: ${{ github.ref_name }}
          files: release/*
          generate_release_notes: true
